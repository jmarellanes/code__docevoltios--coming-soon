/* =====================================================================
  -> MIXINS
===================================================================== */
@mixin dc_text-properties {
  font-weight: normal;
  font-style: normal;
}

@mixin animation-path($name, $from, $to) {
  @keyframes #{$name} {
    from {
      stroke-dashoffset: $from;
    }
    to {
      stroke-dashoffset: $to;
    }
  }
}

@mixin dc_grid($margin-left, $column-width, $margin-right) {
  grid-template-columns:
    [full-start]
    $margin-left
    [grid-start]
    repeat(12, minmax(min-content, $column-width))
    [grid-end]
    $margin-right
    [full-end];
}

///////////////////////////////////////////////////////////////////////
// MEDIA QUERY MANAGER
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints

$text: 'only screen and';
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{$text inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

/* =====================================================================
  -> FUNCTIONS
===================================================================== */
/*
  Convert rem to px
  $size = value in px
  $rem-default = default rem value
*/
@function dc_calculate-rem($size) {
  $rem-default: 16;
  $rem-size: $size / $rem-default;
  @return #{$rem-size}rem;
}

/*
  Calculate line-height
  $lh = value in px
  $size = value in px
*/
@function dc_calculate-lh($lh, $size) {
  @return $lh / $size;
}

/*
  Convert px to rem
  $rem = value in rem
  $rem-default = default rem value
*/
@function dc_calculate-px($rem) {
  $rem-default: 16;
  $px-size: $rem * $rem-default;
  @return #{$px-size}px;
}
